---
title: "XRay Experiment Analysis"
format: html
editor: visual
---

## setup

```{r}
library(tidyverse)
library(lubridate)
library(lme4)
library(sjPlot)
library(superb)
library(ggpubfigs)
library(afex)
```

## Read in Excel File

```{r}
dat <- read_csv("Experiment Results.csv", name_repair = "universal")
dat <- dat %>%
  select(-Consent.Time)
```

## Restructure Data

```{r}
demo_data <- dat %>%
  filter(!is.na(Name)) %>%
  select(2:10)  
colnames(demo_data)[5:8] = c("Time.Games", "Presence", "Delay", "Height")

demo_data <- demo_data %>%
  separate(col = 4, into = c("Game.Exp","HMD.Exp"), sep = "/") %>%
  separate(col = Height, into = c("Height.m", NA), sep = " ") %>%
  mutate(subnum = 1:11, .before = Gender) %>%
  select(-Name)

demo_data

exp_data <- dat %>%
  filter(is.na(Name)) %>%
  select(-c(2:10)) 
  
ind_sphere_data <- exp_data %>%
  filter(...1 == "Time spent each sphere")

colnames(ind_sphere_data)[4:8] <-
  paste0(sapply(strsplit(colnames(ind_sphere_data)[4:8], ".", fixed = T), "[[", 1), ".Map")

colnames(ind_sphere_data)[11:15] <-
  paste0(sapply(strsplit(colnames(ind_sphere_data)[4:8], ".", fixed = T), "[[", 1), ".Xray")

options(digits.sec = 3)

ind_sphere_data <- ind_sphere_data %>%
  select(c(4:8, 11:15)) %>%
  mutate(across(.cols = everything(), ~as.numeric(hms(.x))),
         subnum = 1:11, .before = 1)
  
tot_time_data <- exp_data %>%
  filter(...1 == "Time duration from start\n in Milliseconds") %>%
  select(starts_with("Fifth")) %>%
  rename(Tot.time.map = 1, Tot.time.xray = 2) %>%
  mutate(across(.cols = everything(), ~as.numeric(hms(.x))),
         subnum = 1:11, .before = 1)

position_data <- exp_data %>%
  filter(...1 == "Position")

colnames(position_data)[4:8] <-
  paste0(sapply(strsplit(colnames(position_data)[4:8], ".", fixed = T), "[[", 1), ".Map")

colnames(position_data)[11:15] <-
  paste0(sapply(strsplit(colnames(position_data)[4:8], ".", fixed = T), "[[", 1), ".Xray")

position_data <- position_data %>%
  select(c(4:8, 11:15)) %>%
  mutate(across(.cols = everything(), ~as.numeric(sapply(strsplit(.x, ","), "[[", 2))),
         subnum = 1:11, .before = 1)

all_data <- demo_data %>%
  inner_join(ind_sphere_data, by = "subnum") %>%
  inner_join(tot_time_data, by = "subnum") 
  
  
write.csv(all_data, file = "all_xray_data.csv", row.names = F)

```
## Make nicer plots
```{r}

#Custom classic theme
cust_theme_classic <- function(base_size = 12) 
{
  theme_classic(base_size = base_size)  %+replace%
    theme(text = element_text(size=16),
          plot.title = element_text(hjust = 0.5)
    )
}

#########################################################################################
#### Figure 4
#########################################################################################
tot.time.plot <- superbPlot(
  data = all_data,
  # BSFactors = "exp_condition",
  WSFactors = "Condition(2)",
  variables = c("Tot.time.map","Tot.time.xray"),
  errorbar = "CI", #the NAs are causing problems for the error bars
  adjustments = list(purpose = "difference"),
  plotStyle = "line"
) +
  cust_theme_classic() +
  scale_x_discrete(labels=c("1" = "Map", "2" = "X-Ray")) +
  labs(y = "Total Time (s)")

tot.time.plot

ggsave(tot.time.plot, 
       file = "tot.time.plot.jpg", 
       units = "in",
       width = 4.2, 
       height = 3.3,
       dpi = 600)

t.test(all_data$Tot.time.map, all_data$Tot.time.xray, paired = T)

#########################################################################################
#### Figure 5
#########################################################################################
order.plot <- superbPlot(
  data = all_data,
  # BSFactors = "exp_condition",
  WSFactors = c("Order(5)", "Condition(2)"),
  variables = colnames(all_data)[11:20],
  errorbar = "CI", 
  adjustments = list(purpose = "difference"),
  plotStyle = "line"
) +
  cust_theme_classic() +
  labs(y = "Target-Tagging Time (s)",
       x = "Target Order") +
  scale_color_manual(values = friendly_pal("contrast_three")[2:1],
                     labels = c("1" = "Map", "2" = "X-Ray"))

order.plot

ggsave(order.plot, 
       file = "Fig5.order.plot.jpg", 
       units = "in",
       width = 4.8, 
       height = 3,
       dpi = 600)



#########################################################################################
#### Figure 7
#########################################################################################

colors <- c("Tot.time.map" = friendly_pal("contrast_three")[2], 
            "Tot.time.xray" = friendly_pal("contrast_three")[1])

games.scatter.plot <- ggplot(all_data, aes(x = Time.Games, y = Tot.time.map, color = 1)) +
    geom_smooth(method = lm,
              color = friendly_pal("contrast_three")[2],
              fill = friendly_pal("contrast_three")[2],
              alpha = .1) +
  geom_point(aes(color = 'Tot.time.map')) +
   geom_smooth(aes(y = Tot.time.xray),
               method = lm,
              color = friendly_pal("contrast_three")[1],
              fill = friendly_pal("contrast_three")[1],
              alpha = .1) +
  geom_point(aes(y = Tot.time.xray, color = "Tot.time.xray"), 
             position = position_jitter(width = .75)) +
  cust_theme_classic()+
  labs(x = "Gaming Hours per Week",
       y = "Total Time",
       color = "Condition") +
  scale_color_manual(values = colors,
                     labels = c("Map", "X-Ray")) 
games.scatter.plot 

ggsave(games.scatter.plot, 
       file = "Fig7.games.scatterplot.jpg", 
       units = "in",
       width = 4.8, 
       height = 3.,
       dpi = 600)

#########################################################################################
#### Figure 8
#########################################################################################

diff_times <- all_data %>%
  mutate(diff = Tot.time.map- Tot.time.xray,
         Height.m = as.numeric(Height.m))

height.plot <- ggplot(diff_times, aes(x = Height.m, y = diff)) + 
  geom_point() +
  geom_smooth(method = lm, color = "black", alpha = .3) +
  cust_theme_classic() +
  labs(x = "Participant Height (m)", y = "Map Time - X-Ray Time") +
  geom_hline(yintercept =0, linetype = 2) +
  geom_text(x=1.875, y=35, label="Faster at X-Ray", color = friendly_pal("contrast_three")[1], cex = 5) +
geom_text(x=1.875, y=-45, label="Faster at Map", color = friendly_pal("contrast_three")[2], cex = 5) 
ggsave(height.plot, 
       file = "Fig8.height.scatterplot.jpg", 
       units = "in",
       width = 4.8, 
       height = 3.0,
       dpi = 600)

#########################################################################################
#### Figure 9
#########################################################################################

new_hist_data <- c(3.3, 4.2, 3.9, 3.9, 4.5, 4.2,4.9, 3.7, 3.7, 3.9, 4.5)

hist.plot <- all_data %>%
  mutate(spes.tot = new_hist_data) %>%
  ggplot( aes(x = spes.tot)) +
  geom_histogram(binwidth = 1, color = "black", fill = "gray") +
  cust_theme_classic() +
  labs(x = "Average SPES Rating")+ 
  xlim(c(1,5.5)) +
  scale_y_continuous(expand = c(0,0), limits = c(0,12))
hist.plot

ggsave(hist.plot, 
       file = "presence.plot.jpg", 
       units = "in",
       width = 4.2, 
       height = 3.3,
       dpi = 600)



```
## Use target height as a predictor?

```{r}

all_data_long <- all_data %>%
  pivot_longer(cols = c(11:20), names_to = c("order","condition"), values_to = "sphere_times",
               names_sep = "\\.")

position_long <- position_data %>%
  pivot_longer(cols = c(2:11), names_to = c("order","condition"), values_to = "sphere_heights",
               names_sep = "\\.") %>%
  mutate(sphere_heights = sphere_heights + 1.6)

all_data2 <- all_data_long %>%
  inner_join(position_long, by = c("subnum","order","condition"))
  

mod <- lmer(sphere_times ~ condition + (1|subnum), data = all_data2, REML = F)

mod2 <- lmer(sphere_times ~ condition + sphere_heights + (1|subnum), data = all_data2, REML = F)

mod3 <- lmer(sphere_times ~ condition*sphere_heights + (1|subnum), data = all_data2, REML = F)

modsq <- lmer(sphere_times ~ condition + poly(sphere_heights,2) + (1|subnum), data = all_data2, REML = F)

anova(mod, mod2, mod3)

plot_model(mod3, type = "eff")

position_interaction_plot <- 
  plot_model(mod3, type = "pred", terms = c("sphere_heights", "condition")) +
  cust_theme_classic() +
  labs(title = "",
       y = "Target-tagging times (s)",
       x = "Height of target (m)",
       color = "Condition") 

position_interaction_plot

ggsave(position_interaction_plot, 
       file = "pos.interaction.plot.jpg", 
       units = "in",
       width = 4.8, 
       height = 3.3,
       dpi = 600)


```
## Do stats for sequential times

```{r}

#MLM

seq_dat <- all_data2 %>%
  mutate(order_num = case_when(
    order == "First" ~ 1,
    order == "Second" ~ 2,
    order == "Third" ~ 3,
    order == "Fourth" ~ 4,
    TRUE ~ 5
  ))

lmer.exp <- lmer(sphere_times ~ condition + (1|subnum), data = seq_dat, REML = F)
lmer.order <- lmer(sphere_times ~ condition + order_num + (1|subnum), data = seq_dat, REML = F)
lmer.int <- lmer(sphere_times ~ order_num*condition + (1|subnum), data = seq_dat, REML = F)

anova(lmer.exp, lmer.order, lmer.int)

plot_model(lmer.int, type = "int")

#compare with rm anova (order not ordered)

rmanova <- aov_ez(data = seq_dat,
                  dv = 'sphere_times',
                  id = 'subnum',
                  within = c('order', 'condition'),
                  type = 3,
                  anova_table= list(es= "pes")
  
)

rmanova$anova_table


```
